questions_data = [
    {
        'question': 'Which sorting algorithm has the best average time complexity?',
        'answer_1': 'Merge Sort',
        'answer_2': 'Insertion Sort',
        'answer_3': 'Quick Sort',
        'answer_4': 'Selection Sort',
        'correct_answer': 'Merge Sort',
    },
    {
        'question': 'What is the time complexity of a binary search algorithm?',
        'answer_1': 'O(log n)',
        'answer_2': 'O(n)',
        'answer_3': 'O(n^2)',
        'answer_4': 'O(1)',
        'correct_answer': 'O(log n)',
    },
    {
        'question': 'What is the space complexity of a recursive algorithm?',
        'answer_1': 'O(1)',
        'answer_2': 'O(n)',
        'answer_3': 'O(log n)',
        'answer_4': 'O(n^2)',
        'correct_answer': 'O(n)',
    },
    {
        'question': 'In a binary search tree, what is the left child of a node?',
        'answer_1': 'A node with a value less than the parent node',
        'answer_2': 'A node with a value greater than the parent node',
        'answer_3': 'A node with a value equal to the parent node',
        'answer_4': 'A node with the smallest value in the tree',
        'correct_answer': 'A node with a value less than the parent node',
    },
    {
        'question': 'Which algorithm is used to find the shortest path in a weighted graph?',
        'answer_1': 'Breadth-First Search (BFS)',
        'answer_2': 'Depth-First Search (DFS)',
        'answer_3': 'Dijkstra\'s Algorithm',
        'answer_4': 'Prim\'s Algorithm',
        'correct_answer': 'Dijkstra\'s Algorithm',
    },
    {
        'question': 'What is the worst-case time complexity of the quicksort algorithm?',
        'answer_1': 'O(n)',
        'answer_2': 'O(log n)',
        'answer_3': 'O(n^2)',
        'answer_4': 'O(n log n)',
        'correct_answer': 'O(n^2)',
    },
    {
        'question': 'What data structure is used in the implementation of a breadth-first search algorithm?',
        'answer_1': 'Queue',
        'answer_2': 'Stack',
        'answer_3': 'Linked List',
        'answer_4': 'Heap',
        'correct_answer': 'Queue',
    },
    {
        'question': 'What is the main difference between binary search and linear search algorithms?',
        'answer_1': 'Binary search is faster than linear search',
        'answer_2': 'Binary search can only be used with sorted arrays',
        'answer_3': 'Linear search is faster than binary search',
        'answer_4': 'Linear search can only be used with sorted arrays',
        'correct_answer': 'Binary search can only be used with sorted arrays',
    },
    {
        'question': 'What is the worst-case time complexity of the bubble sort algorithm?',
        'answer_1': 'O(n)',
        'answer_2': 'O(log n)',
        'answer_3': 'O(n^2)',
        'answer_4': 'O(n log n)',
        'correct_answer': 'O(n^2)',
    },
    {
        'question': 'Which data structure is used in the implementation of a depth-first search algorithm?',
        'answer_1': 'Queue',
        'answer_2': 'Stack',
        'answer_3': 'Linked List',
        'answer_4': 'Heap',
        'correct_answer': 'Stack',
    },
    {
        'question': 'What is the time complexity of the selection sort algorithm?',
        'answer_1': 'O(n)',
        'answer_2': 'O(log n)',
        'answer_3': 'O(n^2)',
        'answer_4': 'O(n log n)',
        'correct_answer': 'O(n^2)',
    },
    {
        'question': 'What is the space complexity of the merge sort algorithm?',
        'answer_1': 'O(1)',
        'answer_2': 'O(n)',
        'answer_3': 'O(log n)',
        'answer_4': 'O(n log n)',
        'correct_answer': 'O(n)',
    },
    {
        'question': 'What is the main purpose of using dynamic programming in algorithms?',
        'answer_1': 'To improve the best-case time complexity',
        'answer_2': 'To reduce the space complexity',
        'answer_3': 'To avoid recursion',
        'answer_4': 'To solve complex problems by breaking them into subproblems',
        'correct_answer': 'To solve complex problems by breaking them into subproblems',
    },
    {
        'question': 'What is the time complexity of the insertion sort algorithm?',
        'answer_1': 'O(n)',
        'answer_2': 'O(log n)',
        'answer_3': 'O(n^2)',
        'answer_4': 'O(n log n)',
        'correct_answer': 'O(n^2)',
    },
    {
        'question': 'Which sorting algorithm is an example of an in-place sorting algorithm?',
        'answer_1': 'Merge Sort',
        'answer_2': 'Quick Sort',
        'answer_3': 'Heap Sort',
        'answer_4': 'Selection Sort',
        'correct_answer': 'Quick Sort',
    },
    {
        'question': 'What is the main advantage of using a hash table data structure?',
        'answer_1': 'Constant-time insertion and deletion',
        'answer_2': 'Constant-time search',
        'answer_3': 'Constant-time sorting',
        'answer_4': 'Constant-time access to the middle element',
        'correct_answer': 'Constant-time insertion and deletion',
    },
    {
        'question': 'Which data structure is used to implement a priority queue?',
        'answer_1': 'Queue',
        'answer_2': 'Stack',
        'answer_3': 'Heap',
        'answer_4': 'Linked List',
        'correct_answer': 'Heap',
    },
    {
        'question': 'What is the time complexity of the radix sort algorithm?',
        'answer_1': 'O(n)',
        'answer_2': 'O(log n)',
        'answer_3': 'O(n^2)',
        'answer_4': 'O(nk)',
        'correct_answer': 'O(nk)',
    },
    {
        'question': 'Which algorithm is used to find the minimum spanning tree in a graph?',
        'answer_1': 'Breadth-First Search (BFS)',
        'answer_2': 'Depth-First Search (DFS)',
        'answer_3': 'Dijkstra\'s Algorithm',
        'answer_4': 'Prim\'s Algorithm',
        'correct_answer': 'Prim\'s Algorithm',
    },
    {
        'question': 'What is the space complexity of the quicksort algorithm?',
        'answer_1': 'O(1)',
        'answer_2': 'O(n)',
        'answer_3': 'O(log n)',
        'answer_4': 'O(n^2)',
        'correct_answer': 'O(log n)',
    },
    {
        'question': 'What is the main purpose of using a backtracking algorithm?',
        'answer_1': 'To find the optimal solution in a search space',
        'answer_2': 'To improve the average-case time complexity',
        'answer_3': 'To avoid recursion',
        'answer_4': 'To find the worst-case time complexity',
        'correct_answer': 'To find the optimal solution in a search space',
    },
]
